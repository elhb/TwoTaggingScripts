#! /usr/bin/env python

from library.fqParsing import *
import sys
r1 = sys.argv[1]
r2 = sys.argv[2]
primermissmatch = int(sys.argv[3])
tagmissmatch = int(sys.argv[4])
if tagmissmatch >= 2: sys.stderr.write('WARNING: allowing more than one tagg missmatch may give hits to multiple tags.\n')

pairs = getPairs(r1,r2)

tagcombos = {}
effectivelength = {}

paircounter = 0
oks = 0
for pair in pairs:
    paircounter+=1
    pair.matchPrimers(primermissmatch=primermissmatch,tagmissmatch=tagmissmatch)
    
    if pair.fwdPrimer.read and pair.revPrimer.read:
        if pair.fwdWell==pair.revWell:
            oks += 1
            try: effectivelength[pair.effectivelength] += 1
            except KeyError: effectivelength[pair.effectivelength] = 1
        try: tagcombos[str(pair.fwdWell)+'\t'+str(pair.revWell)] += 1
        except KeyError: tagcombos[str(pair.fwdWell)+'\t'+str(pair.revWell)] = 1
    
    if paircounter == 10000:break

import operator
print 'combos'
tmp = 0
for combo, count in sorted(tagcombos.iteritems(), key=operator.itemgetter(1))[::-1]:#tagcombos.iteritems():
    tmp +=1
    print combo +'\t'+str(count)
    if tmp == 100:break
print 'effective lengths'
for key, count in sorted(effectivelength.iteritems(), key=operator.itemgetter(0)):#tagcombos.iteritems():
    print str(key) +'\t'+str(count)
print str(oks)+' oks out of '+str(paircounter)+' total'

